name: Build and Release JUCE Plugin

on:
  push:
    tags:
      - 'v*'  # Triggers on version tags like v1.0.0

jobs:
  build:
    strategy:
      matrix:
        os: [windows-latest, macos-latest, ubuntu-latest]
        
    runs-on: ${{ matrix.os }}
    
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: recursive
        
    - name: Setup JUCE dependencies (Linux)
      if: runner.os == 'Linux'
      run: |
        sudo apt-get update
        sudo apt-get install -y libasound2-dev libjack-jackd2-dev \
          ladspa-sdk libcurl4-openssl-dev libfreetype6-dev \
          libx11-dev libxcomposite-dev libxcursor-dev libxcursor-dev \
          libxext-dev libxinerama-dev libxrandr-dev libxrender-dev \
          libwebkit2gtk-4.0-dev libglu1-mesa-dev mesa-common-dev
          
    - name: Build Plugin
      run: |
        cmake -B build -DCMAKE_BUILD_TYPE=Release
        cmake --build build --config Release
        
    - name: Package artifacts
      shell: bash
      run: |
        mkdir -p artifacts
        if [[ "$RUNNER_OS" == "Windows" ]]; then
          cp -r build/*_artefacts/Release/VST3/*.vst3 artifacts/ || true
          cp -r build/*_artefacts/Release/Standalone/*.exe artifacts/ || true
        elif [[ "$RUNNER_OS" == "macOS" ]]; then
          cp -r build/*_artefacts/Release/VST3/*.vst3 artifacts/ || true
          cp -r build/*_artefacts/Release/AU/*.component artifacts/ || true
          cp -r build/*_artefacts/Release/Standalone/*.app artifacts/ || true
        else
          cp -r build/*_artefacts/Release/VST3/*.vst3 artifacts/ || true
          cp -r build/*_artefacts/Release/Standalone/* artifacts/ || true
        fi
        
    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: plugin-${{ runner.os }}-${{ github.ref_name }}
        path: artifacts/
        
  release:
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    
    steps:
    - name: Download all artifacts
      uses: actions/download-artifact@v4
      
    - name: Create release archives
      run: |
        for dir in plugin-*/; do
          os_name=$(echo $dir | sed 's/plugin-\(.*\)-v.*/\1/')
          zip -r "${dir%/}.zip" "$dir"
        done
        
    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        files: "*.zip"
        generate_release_notes: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
