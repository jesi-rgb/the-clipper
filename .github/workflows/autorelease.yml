name: AutoRelease

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    strategy:
      matrix:
        os: [macos-14, windows-latest]
        build_type: [Release]

    runs-on: ${{ matrix.os }}

    steps:
    - name: List Xcode installations
      if: matrix.os == 'macos-14'
      run: sudo ls -1 /Applications | grep "Xcode"
    - name: Select Xcode 16.2
      if: matrix.os == 'macos-14'
      run: sudo xcode-select -s /Applications/Xcode_16.2.0.app/Contents/Developer
    - uses: actions/checkout@v4

    - name: Cache dependencies
      uses: actions/cache@v4
      with:
        path: |
          ~/.cmake
          ${{github.workspace}}/build/_deps
        key: ${{ runner.os }}-cmake-${{ hashFiles('CMakeLists.txt') }}

    - name: Configure CMake
      run: cmake -S . -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{ matrix.build_type }} -DCMAKE_CXX_FLAGS="-O2"

    - name: Build with timeout
      timeout-minutes: 20
      run: cmake --build ${{github.workspace}}/build --config ${{ matrix.build_type }} --parallel 2

    - name: Upload VST3 Plugin
      uses: actions/upload-artifact@v4
      with:
        name: vst3-${{ matrix.os }}
        path: |
          ${{github.workspace}}/build/**/*.vst3

  release:
    needs: build
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Download all artifacts
      uses: actions/download-artifact@v4
      
    - name: Create Development Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: dev-${{ github.sha }}
        name: Development Build ${{ github.sha }}
        prerelease: true
        files: "**/*"
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
